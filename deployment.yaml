# Version de l'API Kubernetes utilisée
apiVersion: apps/v1
# Type de ressource Kubernetes
kind: Deployment
# Métadonnées du déploiement
metadata:
  # Nom du déploiement
  name: blog-api
# Spécifications du déploiement
spec:
  # Nombre de réplicas (instances) à exécuter
  replicas: 2
  # Sélecteur pour identifier les pods gérés par ce déploiement
  selector:
    # Labels à utiliser pour la sélection
    matchLabels:
      # Label de l'application
      app: blog-api
  # Modèle pour les pods créés par ce déploiement
  template:
    # Métadonnées du pod
    metadata:
      # Labels attribués au pod
      labels:
        # Label de l'application
        app: blog-api
    # Spécifications du pod
    spec:
      # Conteneurs à exécuter dans le pod
      containers:
        # Configuration du conteneur
        - name: blog-api
          # Variables d'environnement du conteneur
          env:
            - name: DATABASE_PATH
              value: "/app/data/database.sqlite"
          # Image Docker à utiliser (à mettre à jour avec votre nom d'utilisateur Docker Hub)
          image: ${DOCKER_HUB_USERNAME}/blog-api:${DOCKER_IMAGE_VERSION}
          # Politique de récupération de l'image
          imagePullPolicy: Always
          # Ports exposés par le conteneur
          ports:
            # Port du conteneur
            - containerPort: 8004
          # Ressources allouées au conteneur
          resources:
            # Limites maximales de ressources
            limits:
              # Limite CPU
              cpu: "500m"
              # Limite mémoire
              memory: "512Mi"
            # Demandes minimales de ressources
            requests:
              # Demande CPU
              cpu: "250m"
              # Demande mémoire
              memory: "256Mi"
          # Sonde de disponibilité
          readinessProbe:
            # Vérification HTTP
            httpGet:
              # Chemin à vérifier
              path: /api/v1/health
              # Port à utiliser
              port: 8004
            # Délai initial avant la première vérification
            initialDelaySeconds: 10
            # Intervalle entre les vérifications
            periodSeconds: 5
          # Montage de volumes dans le conteneur
          volumeMounts:
            # Configuration du montage
            - name: sqlite-storage
              # Chemin de montage dans le conteneur
              mountPath: /app/data
      # Volumes attachés au pod
      volumes:
        # Configuration du volume
        - name: sqlite-storage
          # Utilisation d'un PersistentVolumeClaim pour le stockage persistant
          persistentVolumeClaim:
            claimName: sqlite-pvc
---
# Définition du PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sqlite-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
